This is a simple CI/CD project to showcase my skills in ....

It's aim is for someone to be able to download this repository and run it
himself to create a working CI/CD pipeline in AWS based on Jenkins
that deploys a container with a flask web app to AWS each time a
commit is made to the tracked flask app repository. 


* DONE Fork the simple Python Flask web application.
CLOSED: [2023-04-18 Tue 18:46]
** Exploring tutor's choice of the app. Reading about Corey Schafer on his blog, https://coreyms.com
This app was committed as a whole, with several distinct stages. I'm
going to use the stages as basis of separate commits for testing of
the pipeline and in the beginning only commit the first stage.
** Download the repository contents with curl.
#+BEGIN_SRC bash
curl -L
http://github.com/CoreyMSchafer/code_snippets/archive/master.tar.gz |
tar zxf -
#+END_SRC
** Created a new repository, copied contents of the first chapter from Flask_Blog tutorial.
Flask Blog code found at [[https://github.com/CoreyMSchafer/code_snippets/tree/master/Python/Flask_Blog][this address]].
Copied .gitignore from the CI/CD repo, but added the name of directory
with the original Corey's repo files, so they wont all get committed
at once.

* DONE Create a separate repository for Jenkins provisioning, installation, and configuration.
CLOSED: [2023-04-18 Tue 18:47]
* TODO Set up Jenkins part 1: setting up a VM on AWS using Terraform.
** Create a data source that gets the AMI of the latest Alma Linux 9
** Create a base main.tf file that is a copy from the Terraform Up and Running code. Also add an alternative version that was given as an example of Jenkins setup on AWS.
** Add definitions for basic VPC and subnet
** Modify the basic security group definition to allow incoming traffic on ports 22 (for SSH) and 8080 (Jenkins web app)
** Move some values to variables to make code cleaner and reusable or usable by people who choose to use different AWS region
*** Move the port values to a variable and use variables instead.
*** Move the EC2 instance type to a variable (eu-north-1 region requires usage of a non standard t3 type server)
*** Move the region name to a variable.
** Create a script to create and open/close LUKS container (which can hold the SSH key).
** Write out pseudocode for a script that would execute the whole project.
** Put the initial steps (vault creation, SSH key generation and uploading and Jenkins VM spin up) into the playtrough script.
*** 1: Vault creation

* Set up Jenkins part 2: install Jenkins using Ansible.
* Set up Jenkins part 3: Configure Jenkins using JCasC
* Create a Jenkinsfile in the Flask web application repository
* Deploy the Flask web application

* TODO's:
** vault_management.sh (low priority, because using Hashicorp's Vault will make this script obsolete):
*** Vault management script could detect if container is already created/closed/open and not report an error if container state is already as requested.
*** Add an option to destroy the existing vault.
** playtrough.sh
*** Both sub points can be achieved checking for presence of a dotfile.
**** Test if script is run in the project's root directory
**** Test if the vault is already accessible
*** DONE Get password from a file or source other than user's input.
CLOSED: [2023-06-13 Tue 12:05]
If an environment variable with password is already defined,
playtrough.sh will not ask for the password.
